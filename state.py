# state file generated using paraview version 5.11.1
import paraview
paraview.compatibility.major = 5
paraview.compatibility.minor = 11

#### import the simple module from the paraview
from paraview.simple import *
#### disable automatic camera reset on 'Show'
paraview.simple._DisableFirstRenderCameraReset()

# ----------------------------------------------------------------
# setup views used in the visualization
# ----------------------------------------------------------------

# get the material library
materialLibrary1 = GetMaterialLibrary()

# Create a new 'Render View'
renderView1 = CreateView('RenderView')
renderView1.ViewSize = [1159, 739]
renderView1.InteractionMode = '2D'
renderView1.AxesGrid = 'GridAxes3DActor'
renderView1.CenterOfRotation = [12.015625, 0.015625, 0.0]
renderView1.StereoType = 'Crystal Eyes'
renderView1.CameraPosition = [12.015625, 0.015625, 69.03503581825095]
renderView1.CameraFocalPoint = [12.015625, 0.015625, 0.0]
renderView1.CameraFocalDisk = 1.0
renderView1.CameraParallelScale = 17.867582049098026
renderView1.BackEnd = 'OSPRay raycaster'
renderView1.OSPRayMaterialLibrary = materialLibrary1

# init the 'GridAxes3DActor' selected for 'AxesGrid'
renderView1.AxesGrid.Visibility = 1
renderView1.AxesGrid.GridColor = [0.7843137254901961, 0.7843137254901961, 0.7843137254901961]
renderView1.AxesGrid.AxesToLabel = 39
renderView1.AxesGrid.XLabelBold = 1
renderView1.AxesGrid.YLabelBold = 1

SetActiveView(None)

# ----------------------------------------------------------------
# setup view layouts
# ----------------------------------------------------------------

# create new layout object 'Layout #1'
layout1 = CreateLayout(name='Layout #1')
layout1.AssignView(0, renderView1)
layout1.SetSize(1159, 739)

# ----------------------------------------------------------------
# restore active view
SetActiveView(renderView1)
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# setup the data processing pipelines
# ----------------------------------------------------------------

# create a new 'Tecplot Reader'
velocidade000005dat = TecplotReader(registrationName='velocidade000005.dat*', FileNames=['C:\\Users\\laura\\Downloads\\visit\\velocidade000005.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000010.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000015.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000020.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000025.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000030.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000035.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000040.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000045.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000050.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000055.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000060.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000065.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000070.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000075.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000080.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000085.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000090.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000095.dat', 'C:\\Users\\laura\\Downloads\\visit\\velocidade000100.dat'])
velocidade000005dat.DataArrayStatus = ['u', 'v']

# create a new 'Calculator'
velocityfield = Calculator(registrationName='velocity field', Input=velocidade000005dat)
velocityfield.ResultArrayName = '2D 2C Velocity Field'
velocityfield.Function = 'u*iHat+v*jHat'

# create a new 'Warp By Scalar'
warpByScalar1 = WarpByScalar(registrationName='WarpByScalar1', Input=velocityfield)
warpByScalar1.Scalars = ['POINTS', 'u']
warpByScalar1.XYPlane = 1

# create a new 'Compute Derivatives'
computeDerivatives1 = ComputeDerivatives(registrationName='ComputeDerivatives1', Input=warpByScalar1)
computeDerivatives1.Scalars = ['POINTS', 'u']
computeDerivatives1.Vectors = ['POINTS', '2D 2C Velocity Field']
computeDerivatives1.OutputVectorType = 'Vorticity'
computeDerivatives1.OutputTensorType = 'Strain'

# create a new 'Stream Tracer'
streamTracer1 = StreamTracer(registrationName='StreamTracer1', Input=velocityfield,
    SeedType='Line')
streamTracer1.Vectors = ['POINTS', '2D 2C Velocity Field']
streamTracer1.MaximumStreamlineLength = 31.96875

# init the 'Line' selected for 'SeedType'
streamTracer1.SeedType.Point1 = [-3.96875, -7.96875, 0.0]
streamTracer1.SeedType.Point2 = [28.0, 8.0, 0.0]
streamTracer1.SeedType.Resolution = 500

# ----------------------------------------------------------------
# setup the visualization in view 'renderView1'
# ----------------------------------------------------------------

# show data from velocityfield
velocityfieldDisplay = Show(velocityfield, renderView1, 'StructuredGridRepresentation')

# get 2D transfer function for 'a2D2CVelocityField'
a2D2CVelocityFieldTF2D = GetTransferFunction2D('a2D2CVelocityField')

# get color transfer function/color map for 'a2D2CVelocityField'
a2D2CVelocityFieldLUT = GetColorTransferFunction('a2D2CVelocityField')
a2D2CVelocityFieldLUT.TransferFunction2D = a2D2CVelocityFieldTF2D
a2D2CVelocityFieldLUT.RGBPoints = [7.979295506560895e-05, 0.18995, 0.07176, 0.23217, 0.0058009035917177335, 0.19483, 0.08339, 0.26149, 0.011521868341215722, 0.19956, 0.09498, 0.29024, 0.017243416639330256, 0.20415, 0.10652, 0.31844, 0.022963651953057555, 0.2086, 0.11802, 0.34607, 0.028685346138326233, 0.21291, 0.12947, 0.37314, 0.03440558145205354, 0.21708, 0.14087, 0.39964, 0.04012727563732221, 0.22111, 0.15223, 0.42558, 0.04584896982259088, 0.225, 0.16354, 0.45096, 0.051569205136318186, 0.22875, 0.17481, 0.47578, 0.05729089932158686, 0.23236, 0.18603, 0.50004, 0.06301113463531416, 0.23582, 0.1972, 0.52373, 0.06873282882058282, 0.23915, 0.20833, 0.54686, 0.07445306413431012, 0.24234, 0.21941, 0.56942, 0.0801747583195788, 0.24539, 0.23044, 0.59142, 0.08589645250484748, 0.2483, 0.24143, 0.61286, 0.09161668781857477, 0.25107, 0.25237, 0.63374, 0.09733838200384345, 0.25369, 0.26327, 0.65406, 0.10305861731757075, 0.25618, 0.27412, 0.67381, 0.10878031150283943, 0.25853, 0.28492, 0.693, 0.11450054681656673, 0.26074, 0.29568, 0.71162, 0.12022224100183539, 0.2628, 0.30639, 0.72968, 0.1259439351871041, 0.26473, 0.31706, 0.74718, 0.13166417050083137, 0.26652, 0.32768, 0.76412, 0.13738586468610003, 0.26816, 0.33825, 0.7805, 0.14310609999982735, 0.26967, 0.34878, 0.79631, 0.14882633531355463, 0.27103, 0.35926, 0.81156, 0.15454511175574057, 0.27226, 0.3697, 0.82624, 0.1602638881979265, 0.27334, 0.38008, 0.84037, 0.16599725335552618, 0.27429, 0.39043, 0.85393, 0.1717160297977121, 0.27509, 0.40072, 0.86692, 0.17743480623989802, 0.27576, 0.41097, 0.87936, 0.18315358268208393, 0.27628, 0.42118, 0.89123, 0.18887235912426986, 0.27667, 0.43134, 0.90254, 0.1945911355664558, 0.27691, 0.44145, 0.91328, 0.20030991200864173, 0.27701, 0.45152, 0.92347, 0.20604327716624138, 0.27698, 0.46153, 0.93309, 0.21176205360842731, 0.2768, 0.47151, 0.94214, 0.21748083005061325, 0.27648, 0.48144, 0.95064, 0.22319960649279916, 0.27603, 0.49132, 0.95857, 0.2289183829349851, 0.27543, 0.50115, 0.96594, 0.23463715937717103, 0.27469, 0.51094, 0.97275, 0.24037052453477067, 0.27381, 0.52069, 0.97899, 0.2460893009769566, 0.27273, 0.5304, 0.98461, 0.2518080774191426, 0.27106, 0.54015, 0.9893, 0.25752685386132845, 0.26878, 0.54995, 0.99303, 0.2632456303035144, 0.26592, 0.55979, 0.99583, 0.2689644067457003, 0.26252, 0.56967, 0.99773, 0.27469777190329997, 0.25862, 0.57958, 0.99876, 0.2804165483454859, 0.25425, 0.5895, 0.99896, 0.28613532478767184, 0.24946, 0.59943, 0.99835, 0.2918541012298578, 0.24427, 0.60937, 0.99697, 0.29757287767204366, 0.23874, 0.61931, 0.99485, 0.3032916541142296, 0.23288, 0.62923, 0.99202, 0.3090104305564155, 0.22676, 0.63913, 0.98851, 0.3147437957140152, 0.22039, 0.64901, 0.98436, 0.3204625721562011, 0.21382, 0.65886, 0.97959, 0.3261813485983871, 0.20708, 0.66866, 0.97423, 0.33190012504057304, 0.20021, 0.67842, 0.96833, 0.3376189014827589, 0.19326, 0.68812, 0.9619, 0.34333767792494485, 0.18625, 0.69775, 0.95498, 0.3490710430825445, 0.17923, 0.70732, 0.94761, 0.35478981952473043, 0.17223, 0.7168, 0.93981, 0.36050859596691637, 0.16529, 0.7262, 0.93161, 0.36622737240910225, 0.15844, 0.73551, 0.92305, 0.37194614885128824, 0.15173, 0.74472, 0.91416, 0.3776649252934741, 0.14519, 0.75381, 0.90496, 0.38339829045107376, 0.13886, 0.76279, 0.8955, 0.38911706689325976, 0.13278, 0.77165, 0.8858, 0.39483584333544564, 0.12698, 0.78037, 0.8759, 0.40055461977763157, 0.12151, 0.78896, 0.86581, 0.4062733962198175, 0.11639, 0.7974, 0.85559, 0.41199217266200344, 0.11167, 0.80569, 0.84525, 0.4177109491041894, 0.10738, 0.81381, 0.83484, 0.423444314261789, 0.10357, 0.82177, 0.82437, 0.42916309070397496, 0.10026, 0.82955, 0.81389, 0.4348818671461609, 0.0975, 0.83714, 0.80342, 0.44060064358834683, 0.09532, 0.84455, 0.79299, 0.4463194200305327, 0.09377, 0.85175, 0.78264, 0.4520381964727187, 0.09287, 0.85875, 0.7724, 0.45777156163031835, 0.09267, 0.86554, 0.7623, 0.4634903380725042, 0.0932, 0.87211, 0.75237, 0.4692091145146902, 0.09451, 0.87844, 0.74265, 0.4749278909568761, 0.09662, 0.88454, 0.73316, 0.480646667399062, 0.09958, 0.8904, 0.72393, 0.48636544384124797, 0.10342, 0.896, 0.715, 0.4920842202834339, 0.10815, 0.90142, 0.70599, 0.49781758544103355, 0.11374, 0.90673, 0.69651, 0.5035363618832196, 0.12014, 0.91193, 0.6866, 0.5092551383254055, 0.12733, 0.91701, 0.67627, 0.5149739147675914, 0.13526, 0.92197, 0.66556, 0.5206926912097773, 0.14391, 0.9268, 0.65448, 0.5264114676519632, 0.15323, 0.93151, 0.64308, 0.5321448328095628, 0.16319, 0.93609, 0.63137, 0.5378636092517488, 0.17377, 0.94053, 0.61938, 0.5435823856939348, 0.18491, 0.94484, 0.60713, 0.5493011621361207, 0.19659, 0.94901, 0.59466, 0.5550199385783067, 0.20877, 0.95304, 0.58199, 0.5607387150204926, 0.22142, 0.95692, 0.56914, 0.5664720801780921, 0.23449, 0.96065, 0.55614, 0.5721908566202781, 0.24797, 0.96423, 0.54303, 0.577909633062464, 0.2618, 0.96765, 0.52981, 0.58362840950465, 0.27597, 0.97092, 0.51653, 0.5893471859468359, 0.29042, 0.97403, 0.50321, 0.5950659623890218, 0.30513, 0.97697, 0.48987, 0.6007847388312078, 0.32006, 0.97974, 0.47654, 0.6065181039888075, 0.33517, 0.98234, 0.46325, 0.6122368804309933, 0.35043, 0.98477, 0.45002, 0.6179556568731793, 0.36581, 0.98702, 0.43688, 0.6236744333153652, 0.38127, 0.98909, 0.42386, 0.6293932097575511, 0.39678, 0.99098, 0.41098, 0.6351119861997371, 0.41229, 0.99268, 0.39826, 0.6408453513573367, 0.42778, 0.99419, 0.38575, 0.6465641277995227, 0.44321, 0.99551, 0.37345, 0.6522829042417086, 0.45854, 0.99663, 0.3614, 0.6580016806838945, 0.47375, 0.99755, 0.34963, 0.6637204571260805, 0.48879, 0.99828, 0.33816, 0.6694392335682664, 0.50362, 0.99879, 0.32701, 0.675172598725866, 0.51822, 0.9991, 0.31622, 0.6808913751680519, 0.53255, 0.99919, 0.30581, 0.6866101516102379, 0.54658, 0.99907, 0.29581, 0.6923289280524237, 0.56026, 0.99873, 0.28623, 0.6980477044946097, 0.57357, 0.99817, 0.27712, 0.7037664809367956, 0.58646, 0.99739, 0.26849, 0.7094852573789816, 0.59891, 0.99638, 0.26038, 0.7152186225365813, 0.61088, 0.99514, 0.2528, 0.7209373989787672, 0.62233, 0.99366, 0.24579, 0.7266561754209531, 0.63323, 0.99195, 0.23937, 0.732374951863139, 0.64362, 0.98999, 0.23356, 0.7380937283053249, 0.65394, 0.98775, 0.22835, 0.7438125047475109, 0.66428, 0.98524, 0.2237, 0.7495458699051105, 0.67462, 0.98246, 0.2196, 0.7552646463472965, 0.68494, 0.97941, 0.21602, 0.7609834227894824, 0.69525, 0.9761, 0.21294, 0.7667021992316684, 0.70553, 0.97255, 0.21032, 0.7724209756738544, 0.71577, 0.96875, 0.20815, 0.7781397521160401, 0.72596, 0.9647, 0.2064, 0.7838585285582261, 0.7361, 0.96043, 0.20504, 0.7895918937158257, 0.74617, 0.95593, 0.20406, 0.7953106701580117, 0.75617, 0.95121, 0.20343, 0.8010294466001976, 0.76608, 0.94627, 0.20311, 0.8067482230423835, 0.77591, 0.94113, 0.2031, 0.8124669994845695, 0.78563, 0.93579, 0.20336, 0.8181857759267553, 0.79524, 0.93025, 0.20386, 0.8239191410843552, 0.80473, 0.92452, 0.20459, 0.8296379175265409, 0.8141, 0.91861, 0.20552, 0.8353566939687269, 0.82333, 0.91253, 0.20663, 0.8410754704109129, 0.83241, 0.90627, 0.20788, 0.8467942468530987, 0.84133, 0.89986, 0.20926, 0.8525130232952847, 0.8501, 0.89328, 0.21074, 0.8582463884528844, 0.85868, 0.88655, 0.2123, 0.8639651648950704, 0.86709, 0.87968, 0.21391, 0.8696839413372562, 0.8753, 0.87267, 0.21555, 0.8754027177794421, 0.88331, 0.86553, 0.21719, 0.8811214942216281, 0.89112, 0.85826, 0.2188, 0.8868402706638141, 0.8987, 0.85087, 0.22038, 0.8925590471059999, 0.90605, 0.84337, 0.22188, 0.8982924122635996, 0.91317, 0.83576, 0.22328, 0.9040111887057855, 0.92004, 0.82806, 0.22456, 0.9097299651479714, 0.92666, 0.82025, 0.2257, 0.9154487415901573, 0.93301, 0.81236, 0.22667, 0.9211675180323433, 0.93909, 0.80439, 0.22744, 0.9268862944745293, 0.94489, 0.79634, 0.228, 0.9326196596321289, 0.95039, 0.78823, 0.22831, 0.9383384360743149, 0.9556, 0.78005, 0.22836, 0.9440572125165007, 0.96049, 0.77181, 0.22811, 0.9497759889586866, 0.96507, 0.76352, 0.22754, 0.9554947654008726, 0.96931, 0.75519, 0.22663, 0.9612135418430584, 0.97323, 0.74682, 0.22536, 0.9669469070006581, 0.97679, 0.73842, 0.22369, 0.9726656834428441, 0.98, 0.73, 0.22161, 0.9783844598850301, 0.98289, 0.7214, 0.21918, 0.9841032363272161, 0.98549, 0.7125, 0.2165, 0.9898220127694018, 0.98781, 0.7033, 0.21358, 0.9955407892115878, 0.98986, 0.69382, 0.21043, 1.0012595656537737, 0.99163, 0.68408, 0.20706, 1.0069929308113734, 0.99314, 0.67408, 0.20348, 1.0127117072535592, 0.99438, 0.66386, 0.19971, 1.0184304836957452, 0.99535, 0.65341, 0.19577, 1.0241492601379312, 0.99607, 0.64277, 0.19165, 1.029868036580117, 0.99654, 0.63193, 0.18738, 1.035586813022303, 0.99675, 0.62093, 0.18297, 1.0413201781799026, 0.99672, 0.60977, 0.17842, 1.0470389546220886, 0.99644, 0.59846, 0.17376, 1.0527577310642746, 0.99593, 0.58703, 0.16899, 1.0584765075064604, 0.99517, 0.57549, 0.16412, 1.0641952839486464, 0.99419, 0.56386, 0.15918, 1.0699140603908324, 0.99297, 0.55214, 0.15417, 1.0756328368330181, 0.99153, 0.54036, 0.1491, 1.0813662019906178, 0.98987, 0.52854, 0.14398, 1.0870849784328038, 0.98799, 0.51667, 0.13883, 1.0928037548749896, 0.9859, 0.50479, 0.13367, 1.0985225313171756, 0.9836, 0.49291, 0.12849, 1.1042413077593616, 0.98108, 0.48104, 0.12332, 1.1099600842015476, 0.97837, 0.4692, 0.11817, 1.115693449359147, 0.97545, 0.4574, 0.11305, 1.121412225801333, 0.97234, 0.44565, 0.10797, 1.1271310022435188, 0.96904, 0.43399, 0.10294, 1.1328497786857048, 0.96555, 0.42241, 0.09798, 1.1385685551278908, 0.96187, 0.41093, 0.0931, 1.1442873315700768, 0.95801, 0.39958, 0.08831, 1.1500206967276765, 0.95398, 0.38836, 0.08362, 1.1557394731698623, 0.94977, 0.37729, 0.07905, 1.1614582496120482, 0.94538, 0.36638, 0.07461, 1.1671770260542342, 0.94084, 0.35566, 0.07031, 1.17289580249642, 0.93612, 0.34513, 0.06616, 1.178614578938606, 0.93125, 0.33482, 0.06218, 1.184333355380792, 0.92623, 0.32473, 0.05837, 1.1900667205383917, 0.92105, 0.31489, 0.05475, 1.1957854969805775, 0.91572, 0.3053, 0.05134, 1.2015042734227634, 0.91024, 0.29599, 0.04814, 1.2072230498649494, 0.90463, 0.28696, 0.04516, 1.2129418263071354, 0.89888, 0.27824, 0.04243, 1.2186606027493212, 0.89298, 0.26981, 0.03993, 1.224393967906921, 0.88691, 0.26152, 0.03753, 1.230112744349107, 0.88066, 0.25334, 0.03521, 1.2358315207912929, 0.87422, 0.24526, 0.03297, 1.2415502972334787, 0.8676, 0.2373, 0.03082, 1.2472690736756646, 0.86079, 0.22945, 0.02875, 1.2529878501178506, 0.8538, 0.2217, 0.02677, 1.2587212152754503, 0.84662, 0.21407, 0.02487, 1.2644399917176363, 0.83926, 0.20654, 0.02305, 1.270158768159822, 0.83172, 0.19912, 0.02131, 1.275877544602008, 0.82399, 0.19182, 0.01966, 1.281596321044194, 0.81608, 0.18462, 0.01809, 1.2873150974863798, 0.80799, 0.17753, 0.0166, 1.2930338739285658, 0.79971, 0.17055, 0.0152, 1.2987672390861655, 0.79125, 0.16368, 0.01387, 1.3044860155283515, 0.7826, 0.15693, 0.01264, 1.3102047919705373, 0.77377, 0.15028, 0.01148, 1.3159235684127233, 0.76476, 0.14374, 0.01041, 1.3216423448549093, 0.75556, 0.13731, 0.00942, 1.3273611212970953, 0.74617, 0.13098, 0.00851, 1.3330944864546947, 0.73661, 0.12477, 0.00769, 1.3388132628968805, 0.72686, 0.11867, 0.00695, 1.3445320393390665, 0.71692, 0.11268, 0.00629, 1.3502508157812525, 0.7068, 0.1068, 0.00571, 1.3559695922234385, 0.6965, 0.10102, 0.00522, 1.3616883686656245, 0.68602, 0.09536, 0.00481, 1.3674071451078103, 0.67535, 0.0898, 0.00449, 1.37314051026541, 0.66449, 0.08436, 0.00424, 1.378859286707596, 0.65345, 0.07902, 0.00408, 1.3845780631497817, 0.64223, 0.0738, 0.00401, 1.3902968395919677, 0.63082, 0.06868, 0.00401, 1.3960156160341537, 0.61923, 0.06367, 0.0041, 1.4017343924763395, 0.60746, 0.05878, 0.00427, 1.4074677576339392, 0.5955, 0.05399, 0.00453, 1.4131865340761252, 0.58336, 0.04931, 0.00486, 1.4189053105183111, 0.57103, 0.04474, 0.00529, 1.424624086960497, 0.55852, 0.04028, 0.00579, 1.430342863402683, 0.54583, 0.03593, 0.00638, 1.436061639844869, 0.53295, 0.03169, 0.00705, 1.4417950050024686, 0.51989, 0.02756, 0.0078, 1.4475137814446546, 0.50664, 0.02354, 0.00863, 1.4532325578868404, 0.49321, 0.01963, 0.00955, 1.4589513343290264, 0.4796, 0.01583, 0.01055]
a2D2CVelocityFieldLUT.ColorSpace = 'RGB'
a2D2CVelocityFieldLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'a2D2CVelocityField'
a2D2CVelocityFieldPWF = GetOpacityTransferFunction('a2D2CVelocityField')
a2D2CVelocityFieldPWF.Points = [7.979295506560895e-05, 1.0, 0.5, 0.0, 1.4589513343290264, 1.0, 0.5, 0.0]
a2D2CVelocityFieldPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
velocityfieldDisplay.Representation = 'Surface'
velocityfieldDisplay.ColorArrayName = ['POINTS', '2D 2C Velocity Field']
velocityfieldDisplay.LookupTable = a2D2CVelocityFieldLUT
velocityfieldDisplay.SelectTCoordArray = 'None'
velocityfieldDisplay.SelectNormalArray = 'None'
velocityfieldDisplay.SelectTangentArray = 'None'
velocityfieldDisplay.OSPRayScaleArray = '2D 2C Velocity Field'
velocityfieldDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
velocityfieldDisplay.SelectOrientationVectors = '2D 2C Velocity Field'
velocityfieldDisplay.ScaleFactor = 3.1968750000000004
velocityfieldDisplay.SelectScaleArray = '2D 2C Velocity Field'
velocityfieldDisplay.GlyphType = 'Arrow'
velocityfieldDisplay.GlyphTableIndexArray = '2D 2C Velocity Field'
velocityfieldDisplay.GaussianRadius = 0.15984375
velocityfieldDisplay.SetScaleArray = ['POINTS', '2D 2C Velocity Field']
velocityfieldDisplay.ScaleTransferFunction = 'PiecewiseFunction'
velocityfieldDisplay.OpacityArray = ['POINTS', '2D 2C Velocity Field']
velocityfieldDisplay.OpacityTransferFunction = 'PiecewiseFunction'
velocityfieldDisplay.DataAxesGrid = 'GridAxesRepresentation'
velocityfieldDisplay.PolarAxes = 'PolarAxesRepresentation'
velocityfieldDisplay.ScalarOpacityFunction = a2D2CVelocityFieldPWF
velocityfieldDisplay.ScalarOpacityUnitDistance = 0.4436055143674488
velocityfieldDisplay.SelectInputVectors = ['POINTS', '2D 2C Velocity Field']
velocityfieldDisplay.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
velocityfieldDisplay.ScaleTransferFunction.Points = [-0.11067318916320801, 0.0, 0.5, 0.0, 1.4144951105117798, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
velocityfieldDisplay.OpacityTransferFunction.Points = [-0.11067318916320801, 0.0, 0.5, 0.0, 1.4144951105117798, 1.0, 0.5, 0.0]

# setup the color legend parameters for each legend in this view

# get color legend/bar for a2D2CVelocityFieldLUT in view renderView1
a2D2CVelocityFieldLUTColorBar = GetScalarBar(a2D2CVelocityFieldLUT, renderView1)
a2D2CVelocityFieldLUTColorBar.Orientation = 'Horizontal'
a2D2CVelocityFieldLUTColorBar.WindowLocation = 'Any Location'
a2D2CVelocityFieldLUTColorBar.Position = [0.3332873166522863, 0.782300405953992]
a2D2CVelocityFieldLUTColorBar.Title = '2D 2C Velocity Field'
a2D2CVelocityFieldLUTColorBar.ComponentTitle = 'Magnitude'
a2D2CVelocityFieldLUTColorBar.ScalarBarLength = 0.32999999999999985

# set color bar visibility
a2D2CVelocityFieldLUTColorBar.Visibility = 1

# show color legend
velocityfieldDisplay.SetScalarBarVisibility(renderView1, True)

# ----------------------------------------------------------------
# setup color maps and opacity mapes used in the visualization
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# restore active source
SetActiveSource(velocityfield)
# ----------------------------------------------------------------


if __name__ == '__main__':
    # generate extracts
    SaveExtracts(ExtractsOutputDirectory='extracts')